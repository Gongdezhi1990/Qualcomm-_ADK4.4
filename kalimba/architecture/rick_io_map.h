/*******************************************************************************
//  Copyright (c) 2017 Qualcomm Technologies International, Ltd.
 Part of ADK_CSR867x.WIN. 4.4
*******************************************************************************/

#ifndef RICK_IO_MAP_H_INCLUDED
#define RICK_IO_MAP_H_INCLUDED

   // Memory map
   .CONST $MM_DOLOOP_START                                                0xFFFE00; // RW  24 bits
   .CONST $_MM_DOLOOP_START                                       $MM_DOLOOP_START; // RW  24 bits
   .CONST $MM_DOLOOP_END                                                  0xFFFE01; // RW  24 bits
   .CONST $_MM_DOLOOP_END                                           $MM_DOLOOP_END; // RW  24 bits
   .CONST $MM_QUOTIENT                                                    0xFFFE02; // RW  24 bits
   .CONST $_MM_QUOTIENT                                               $MM_QUOTIENT; // RW  24 bits
   .CONST $MM_REM                                                         0xFFFE03; // RW  24 bits
   .CONST $_MM_REM                                                         $MM_REM; // RW  24 bits
   .CONST $MM_RINTLINK                                                    0xFFFE04; // RW  24 bits
   .CONST $_MM_RINTLINK                                               $MM_RINTLINK; // RW  24 bits
   .CONST $ARITHMETIC_MODE                                                0xFFFE05; // RW   5 bits
   .CONST $_ARITHMETIC_MODE                                       $ARITHMETIC_MODE; // RW   5 bits
   .CONST $STACK_START_ADDR                                               0xFFFE06; // RW  24 bits
   .CONST $_STACK_START_ADDR                                     $STACK_START_ADDR; // RW  24 bits
   .CONST $STACK_END_ADDR                                                 0xFFFE07; // RW  24 bits
   .CONST $_STACK_END_ADDR                                         $STACK_END_ADDR; // RW  24 bits
   .CONST $STACK_POINTER                                                  0xFFFE08; // RW  24 bits
   .CONST $_STACK_POINTER                                           $STACK_POINTER; // RW  24 bits
   .CONST $STACK_OVERFLOW_PC                                              0xFFFE09; //  R  24 bits
   .CONST $_STACK_OVERFLOW_PC                                   $STACK_OVERFLOW_PC; //  R  24 bits
   .CONST $FRAME_POINTER                                                  0xFFFE0A; // RW  24 bits
   .CONST $_FRAME_POINTER                                           $FRAME_POINTER; // RW  24 bits
   .CONST $BITREVERSE_VAL                                                 0xFFFE0B; // RW  24 bits
   .CONST $_BITREVERSE_VAL                                         $BITREVERSE_VAL; // RW  24 bits
   .CONST $BITREVERSE_DATA                                                0xFFFE0C; //  R  24 bits
   .CONST $_BITREVERSE_DATA                                       $BITREVERSE_DATA; //  R  24 bits
   .CONST $BITREVERSE_DATA16                                              0xFFFE0D; //  R  24 bits
   .CONST $_BITREVERSE_DATA16                                   $BITREVERSE_DATA16; //  R  24 bits
   .CONST $BITREVERSE_ADDR                                                0xFFFE0E; //  R  24 bits
   .CONST $_BITREVERSE_ADDR                                       $BITREVERSE_ADDR; //  R  24 bits
   .CONST $NUM_RUN_CLKS_MS                                                0xFFFE0F; //  R   8 bits
   .CONST $_NUM_RUN_CLKS_MS                                       $NUM_RUN_CLKS_MS; //  R   8 bits
   .CONST $NUM_RUN_CLKS_LS                                                0xFFFE10; //  R  24 bits
   .CONST $_NUM_RUN_CLKS_LS                                       $NUM_RUN_CLKS_LS; //  R  24 bits
   .CONST $NUM_INSTRS_MS                                                  0xFFFE11; //  R   8 bits
   .CONST $_NUM_INSTRS_MS                                           $NUM_INSTRS_MS; //  R   8 bits
   .CONST $NUM_INSTRS_LS                                                  0xFFFE12; //  R  24 bits
   .CONST $_NUM_INSTRS_LS                                           $NUM_INSTRS_LS; //  R  24 bits
   .CONST $NUM_CORE_STALLS_MS                                             0xFFFE13; //  R   8 bits
   .CONST $_NUM_CORE_STALLS_MS                                 $NUM_CORE_STALLS_MS; //  R   8 bits
   .CONST $NUM_CORE_STALLS_LS                                             0xFFFE14; //  R  24 bits
   .CONST $_NUM_CORE_STALLS_LS                                 $NUM_CORE_STALLS_LS; //  R  24 bits
   .CONST $DBG_COUNTERS_EN                                                0xFFFE15; // RW   1 bits
   .CONST $_DBG_COUNTERS_EN                                       $DBG_COUNTERS_EN; // RW   1 bits
   .CONST $PC_STATUS                                                      0xFFFE16; //  R  24 bits
   .CONST $_PC_STATUS                                                   $PC_STATUS; //  R  24 bits
   .CONST $CLOCK_DIVIDE_RATE                                              0xFFFE20; // RW  16 bits
   .CONST $_CLOCK_DIVIDE_RATE                                   $CLOCK_DIVIDE_RATE; // RW  16 bits
   .CONST $INT_SW_ERROR_EVENT_TRIGGER                                     0xFFFE21; // RW   1 bits
   .CONST $_INT_SW_ERROR_EVENT_TRIGGER                 $INT_SW_ERROR_EVENT_TRIGGER; // RW   1 bits
   .CONST $DSP2MCU_EVENT_DATA                                             0xFFFE22; // RW  16 bits
   .CONST $_DSP2MCU_EVENT_DATA                                 $DSP2MCU_EVENT_DATA; // RW  16 bits
   .CONST $MCU2DSP_EVENT_DATA                                             0xFFFE23; //  R  16 bits
   .CONST $_MCU2DSP_EVENT_DATA                                 $MCU2DSP_EVENT_DATA; //  R  16 bits
   .CONST $PIO_IN                                                         0xFFFE2C; //  R  24 bits
   .CONST $_PIO_IN                                                         $PIO_IN; //  R  24 bits
   .CONST $PIO_OUT                                                        0xFFFE2D; // RW  24 bits
   .CONST $_PIO_OUT                                                       $PIO_OUT; // RW  24 bits
   .CONST $PIO_DIR                                                        0xFFFE2E; // RW  24 bits
   .CONST $_PIO_DIR                                                       $PIO_DIR; // RW  24 bits
   .CONST $PIO2_IN                                                        0xFFFE2F; //  R   8 bits
   .CONST $_PIO2_IN                                                       $PIO2_IN; //  R   8 bits
   .CONST $PIO2_OUT                                                       0xFFFE30; // RW   8 bits
   .CONST $_PIO2_OUT                                                     $PIO2_OUT; // RW   8 bits
   .CONST $PIO2_DIR                                                       0xFFFE31; // RW   8 bits
   .CONST $_PIO2_DIR                                                     $PIO2_DIR; // RW   8 bits
   .CONST $PIO_EVENT_EN_MASK                                              0xFFFE32; // RW  24 bits
   .CONST $_PIO_EVENT_EN_MASK                                   $PIO_EVENT_EN_MASK; // RW  24 bits
   .CONST $PIO2_EVENT_EN_MASK                                             0xFFFE33; // RW   8 bits
   .CONST $_PIO2_EVENT_EN_MASK                                 $PIO2_EVENT_EN_MASK; // RW   8 bits
   .CONST $FORCE_FAST_MMU                                                 0xFFFE37; // RW   1 bits
   .CONST $_FORCE_FAST_MMU                                         $FORCE_FAST_MMU; // RW   1 bits
   .CONST $RANDOM_NUMBER_SEED                                             0xFFFE38; // RW  24 bits
   .CONST $_RANDOM_NUMBER_SEED                                 $RANDOM_NUMBER_SEED; // RW  24 bits
   .CONST $RANDOM_NUMBER                                                  0xFFFE39; //  R  24 bits
   .CONST $_RANDOM_NUMBER                                           $RANDOM_NUMBER; //  R  24 bits
   .CONST $INT_GBL_ENABLE                                                 0xFFFE40; // RW   1 bits
   .CONST $_INT_GBL_ENABLE                                         $INT_GBL_ENABLE; // RW   1 bits
   .CONST $INT_UNBLOCK                                                    0xFFFE41; // RW   1 bits
   .CONST $_INT_UNBLOCK                                               $INT_UNBLOCK; // RW   1 bits
   .CONST $INT_ADDR                                                       0xFFFE42; // RW  24 bits
   .CONST $_INT_ADDR                                                     $INT_ADDR; // RW  24 bits
   .CONST $INT_CLK_SWITCH_EN                                              0xFFFE43; // RW   1 bits
   .CONST $_INT_CLK_SWITCH_EN                                   $INT_CLK_SWITCH_EN; // RW   1 bits
   .CONST $INT_CLOCK_DIVIDE_RATE                                          0xFFFE44; // RW  16 bits
   .CONST $_INT_CLOCK_DIVIDE_RATE                           $INT_CLOCK_DIVIDE_RATE; // RW  16 bits
   .CONST $INT_ACK                                                        0xFFFE45; // RW   1 bits
   .CONST $_INT_ACK                                                       $INT_ACK; // RW   1 bits
   .CONST $INT_SW0_EVENT                                                  0xFFFE46; // RW   1 bits
   .CONST $_INT_SW0_EVENT                                           $INT_SW0_EVENT; // RW   1 bits
   .CONST $INT_SW1_EVENT                                                  0xFFFE47; // RW   1 bits
   .CONST $_INT_SW1_EVENT                                           $INT_SW1_EVENT; // RW   1 bits
   .CONST $INT_SW2_EVENT                                                  0xFFFE48; // RW   1 bits
   .CONST $_INT_SW2_EVENT                                           $INT_SW2_EVENT; // RW   1 bits
   .CONST $INT_SW3_EVENT                                                  0xFFFE49; // RW   1 bits
   .CONST $_INT_SW3_EVENT                                           $INT_SW3_EVENT; // RW   1 bits
   .CONST $INT_LOW_PRI_SOURCES_EN                                         0xFFFE4A; // RW  24 bits
   .CONST $_INT_LOW_PRI_SOURCES_EN                         $INT_LOW_PRI_SOURCES_EN; // RW  24 bits
   .CONST $INT_LOW_PRI_SOURCES_EXTRA_EN                                   0xFFFE4B; // RW  24 bits
   .CONST $_INT_LOW_PRI_SOURCES_EXTRA_EN             $INT_LOW_PRI_SOURCES_EXTRA_EN; // RW  24 bits
   .CONST $INT_MED_PRI_SOURCES_EN                                         0xFFFE4C; // RW  24 bits
   .CONST $_INT_MED_PRI_SOURCES_EN                         $INT_MED_PRI_SOURCES_EN; // RW  24 bits
   .CONST $INT_MED_PRI_SOURCES_EXTRA_EN                                   0xFFFE4D; // RW  24 bits
   .CONST $_INT_MED_PRI_SOURCES_EXTRA_EN             $INT_MED_PRI_SOURCES_EXTRA_EN; // RW  24 bits
   .CONST $INT_HIGH_PRI_SOURCES_EN                                        0xFFFE4E; // RW  24 bits
   .CONST $_INT_HIGH_PRI_SOURCES_EN                       $INT_HIGH_PRI_SOURCES_EN; // RW  24 bits
   .CONST $INT_HIGH_PRI_SOURCES_EXTRA_EN                                  0xFFFE4F; // RW  24 bits
   .CONST $_INT_HIGH_PRI_SOURCES_EXTRA_EN           $INT_HIGH_PRI_SOURCES_EXTRA_EN; // RW  24 bits
   .CONST $INT_LOAD_INFO                                                  0xFFFE50; // RW  20 bits
   .CONST $_INT_LOAD_INFO                                           $INT_LOAD_INFO; // RW  20 bits
   .CONST $INT_SAVE_INFO                                                  0xFFFE51; //  R  19 bits
   .CONST $_INT_SAVE_INFO                                           $INT_SAVE_INFO; //  R  19 bits
   .CONST $INT_SOURCE                                                     0xFFFE52; //  R   8 bits
   .CONST $_INT_SOURCE                                                 $INT_SOURCE; //  R   8 bits
   .CONST $TIMER_TIME_MS                                                  0xFFFE58; //  R   8 bits
   .CONST $_TIMER_TIME_MS                                           $TIMER_TIME_MS; //  R   8 bits
   .CONST $TIMER_TIME                                                     0xFFFE59; //  R  24 bits
   .CONST $_TIMER_TIME                                                 $TIMER_TIME; //  R  24 bits
   .CONST $TIMER1_EN                                                      0xFFFE5A; // RW   1 bits
   .CONST $_TIMER1_EN                                                   $TIMER1_EN; // RW   1 bits
   .CONST $TIMER2_EN                                                      0xFFFE5B; // RW   1 bits
   .CONST $_TIMER2_EN                                                   $TIMER2_EN; // RW   1 bits
   .CONST $TIMER1_TRIGGER                                                 0xFFFE5C; // RW  24 bits
   .CONST $_TIMER1_TRIGGER                                         $TIMER1_TRIGGER; // RW  24 bits
   .CONST $TIMER2_TRIGGER                                                 0xFFFE5D; // RW  24 bits
   .CONST $_TIMER2_TRIGGER                                         $TIMER2_TRIGGER; // RW  24 bits
   .CONST $PM_FLASHWIN_START_ADDR                                         0xFFFED0; // RW  23 bits
   .CONST $_PM_FLASHWIN_START_ADDR                         $PM_FLASHWIN_START_ADDR; // RW  23 bits
   .CONST $PM_FLASHWIN_SIZE                                               0xFFFED1; // RW  24 bits
   .CONST $_PM_FLASHWIN_SIZE                                     $PM_FLASHWIN_SIZE; // RW  24 bits
   .CONST $PM_FLASHWIN_CACHE_SIZE                                         0xFFFED2; // RW   1 bits
   .CONST $_PM_FLASHWIN_CACHE_SIZE                         $PM_FLASHWIN_CACHE_SIZE; // RW   1 bits
   .CONST $DOLOOP_CACHE_EN                                                0xFFFED3; // RW   1 bits
   .CONST $_DOLOOP_CACHE_EN                                       $DOLOOP_CACHE_EN; // RW   1 bits
   .CONST $PM_CACHE_EN                                                    0xFFFED4; // RW   1 bits
   .CONST $_PM_CACHE_EN                                               $PM_CACHE_EN; // RW   1 bits
   .CONST $PMWIN_NOSIGNX                                                  0xFFFEE0; // RW   1 bits
   .CONST $_PMWIN_NOSIGNX                                           $PMWIN_NOSIGNX; // RW   1 bits
   .CONST $PMWIN_ENABLE                                                   0xFFFEE1; // RW   1 bits
   .CONST $_PMWIN_ENABLE                                             $PMWIN_ENABLE; // RW   1 bits
   .CONST $FLASH_WINDOW1_START_ADDR                                       0xFFFEF0; // RW  23 bits
   .CONST $_FLASH_WINDOW1_START_ADDR                     $FLASH_WINDOW1_START_ADDR; // RW  23 bits
   .CONST $FLASH_WINDOW2_START_ADDR                                       0xFFFEF1; // RW  23 bits
   .CONST $_FLASH_WINDOW2_START_ADDR                     $FLASH_WINDOW2_START_ADDR; // RW  23 bits
   .CONST $FLASH_WINDOW3_START_ADDR                                       0xFFFEF2; // RW  23 bits
   .CONST $_FLASH_WINDOW3_START_ADDR                     $FLASH_WINDOW3_START_ADDR; // RW  23 bits
   .CONST $FLASHWIN1_CONFIG                                               0xFFFEF3; // RW   2 bits
   .CONST $_FLASHWIN1_CONFIG                                     $FLASHWIN1_CONFIG; // RW   2 bits
   .CONST $FLASHWIN2_CONFIG                                               0xFFFEF4; // RW   2 bits
   .CONST $_FLASHWIN2_CONFIG                                     $FLASHWIN2_CONFIG; // RW   2 bits
   .CONST $FLASHWIN3_CONFIG                                               0xFFFEF5; // RW   2 bits
   .CONST $_FLASHWIN3_CONFIG                                     $FLASHWIN3_CONFIG; // RW   2 bits
   .CONST $WRITE_PORT0_DATA                                               0xFFFF00; //  W  24 bits
   .CONST $_WRITE_PORT0_DATA                                     $WRITE_PORT0_DATA; //  W  24 bits
   .CONST $WRITE_PORT1_DATA                                               0xFFFF01; //  W  24 bits
   .CONST $_WRITE_PORT1_DATA                                     $WRITE_PORT1_DATA; //  W  24 bits
   .CONST $WRITE_PORT2_DATA                                               0xFFFF02; //  W  24 bits
   .CONST $_WRITE_PORT2_DATA                                     $WRITE_PORT2_DATA; //  W  24 bits
   .CONST $WRITE_PORT3_DATA                                               0xFFFF03; //  W  24 bits
   .CONST $_WRITE_PORT3_DATA                                     $WRITE_PORT3_DATA; //  W  24 bits
   .CONST $WRITE_PORT4_DATA                                               0xFFFF04; //  W  24 bits
   .CONST $_WRITE_PORT4_DATA                                     $WRITE_PORT4_DATA; //  W  24 bits
   .CONST $WRITE_PORT5_DATA                                               0xFFFF05; //  W  24 bits
   .CONST $_WRITE_PORT5_DATA                                     $WRITE_PORT5_DATA; //  W  24 bits
   .CONST $WRITE_PORT6_DATA                                               0xFFFF06; //  W  24 bits
   .CONST $_WRITE_PORT6_DATA                                     $WRITE_PORT6_DATA; //  W  24 bits
   .CONST $WRITE_PORT7_DATA                                               0xFFFF07; //  W  24 bits
   .CONST $_WRITE_PORT7_DATA                                     $WRITE_PORT7_DATA; //  W  24 bits
   .CONST $WRITE_PORT8_DATA                                               0xFFFF08; //  W  24 bits
   .CONST $_WRITE_PORT8_DATA                                     $WRITE_PORT8_DATA; //  W  24 bits
   .CONST $WRITE_PORT9_DATA                                               0xFFFF09; //  W  24 bits
   .CONST $_WRITE_PORT9_DATA                                     $WRITE_PORT9_DATA; //  W  24 bits
   .CONST $WRITE_PORT10_DATA                                              0xFFFF0A; //  W  24 bits
   .CONST $_WRITE_PORT10_DATA                                   $WRITE_PORT10_DATA; //  W  24 bits
   .CONST $WRITE_PORT11_DATA                                              0xFFFF0B; //  W  24 bits
   .CONST $_WRITE_PORT11_DATA                                   $WRITE_PORT11_DATA; //  W  24 bits
   .CONST $WRITE_PORT0_CONFIG                                             0xFFFF0C; // RW   6 bits
   .CONST $_WRITE_PORT0_CONFIG                                 $WRITE_PORT0_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT1_CONFIG                                             0xFFFF0D; // RW   6 bits
   .CONST $_WRITE_PORT1_CONFIG                                 $WRITE_PORT1_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT2_CONFIG                                             0xFFFF0E; // RW   6 bits
   .CONST $_WRITE_PORT2_CONFIG                                 $WRITE_PORT2_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT3_CONFIG                                             0xFFFF0F; // RW   6 bits
   .CONST $_WRITE_PORT3_CONFIG                                 $WRITE_PORT3_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT4_CONFIG                                             0xFFFF10; // RW   6 bits
   .CONST $_WRITE_PORT4_CONFIG                                 $WRITE_PORT4_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT5_CONFIG                                             0xFFFF11; // RW   6 bits
   .CONST $_WRITE_PORT5_CONFIG                                 $WRITE_PORT5_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT6_CONFIG                                             0xFFFF12; // RW   6 bits
   .CONST $_WRITE_PORT6_CONFIG                                 $WRITE_PORT6_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT7_CONFIG                                             0xFFFF13; // RW   6 bits
   .CONST $_WRITE_PORT7_CONFIG                                 $WRITE_PORT7_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT8_CONFIG                                             0xFFFF14; // RW   6 bits
   .CONST $_WRITE_PORT8_CONFIG                                 $WRITE_PORT8_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT9_CONFIG                                             0xFFFF15; // RW   6 bits
   .CONST $_WRITE_PORT9_CONFIG                                 $WRITE_PORT9_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT10_CONFIG                                            0xFFFF16; // RW   6 bits
   .CONST $_WRITE_PORT10_CONFIG                               $WRITE_PORT10_CONFIG; // RW   6 bits
   .CONST $WRITE_PORT11_CONFIG                                            0xFFFF17; // RW   6 bits
   .CONST $_WRITE_PORT11_CONFIG                               $WRITE_PORT11_CONFIG; // RW   6 bits
   .CONST $READ_PORT0_DATA                                                0xFFFF18; //  R  24 bits
   .CONST $_READ_PORT0_DATA                                       $READ_PORT0_DATA; //  R  24 bits
   .CONST $READ_PORT1_DATA                                                0xFFFF19; //  R  24 bits
   .CONST $_READ_PORT1_DATA                                       $READ_PORT1_DATA; //  R  24 bits
   .CONST $READ_PORT2_DATA                                                0xFFFF1A; //  R  24 bits
   .CONST $_READ_PORT2_DATA                                       $READ_PORT2_DATA; //  R  24 bits
   .CONST $READ_PORT3_DATA                                                0xFFFF1B; //  R  24 bits
   .CONST $_READ_PORT3_DATA                                       $READ_PORT3_DATA; //  R  24 bits
   .CONST $READ_PORT4_DATA                                                0xFFFF1C; //  R  24 bits
   .CONST $_READ_PORT4_DATA                                       $READ_PORT4_DATA; //  R  24 bits
   .CONST $READ_PORT5_DATA                                                0xFFFF1D; //  R  24 bits
   .CONST $_READ_PORT5_DATA                                       $READ_PORT5_DATA; //  R  24 bits
   .CONST $READ_PORT6_DATA                                                0xFFFF1E; //  R  24 bits
   .CONST $_READ_PORT6_DATA                                       $READ_PORT6_DATA; //  R  24 bits
   .CONST $READ_PORT7_DATA                                                0xFFFF1F; //  R  24 bits
   .CONST $_READ_PORT7_DATA                                       $READ_PORT7_DATA; //  R  24 bits
   .CONST $READ_PORT8_DATA                                                0xFFFF20; //  R  24 bits
   .CONST $_READ_PORT8_DATA                                       $READ_PORT8_DATA; //  R  24 bits
   .CONST $READ_PORT9_DATA                                                0xFFFF21; //  R  24 bits
   .CONST $_READ_PORT9_DATA                                       $READ_PORT9_DATA; //  R  24 bits
   .CONST $READ_PORT10_DATA                                               0xFFFF22; //  R  24 bits
   .CONST $_READ_PORT10_DATA                                     $READ_PORT10_DATA; //  R  24 bits
   .CONST $READ_PORT11_DATA                                               0xFFFF23; //  R  24 bits
   .CONST $_READ_PORT11_DATA                                     $READ_PORT11_DATA; //  R  24 bits
   .CONST $READ_PORT0_CONFIG                                              0xFFFF24; // RW   6 bits
   .CONST $_READ_PORT0_CONFIG                                   $READ_PORT0_CONFIG; // RW   6 bits
   .CONST $READ_PORT1_CONFIG                                              0xFFFF25; // RW   6 bits
   .CONST $_READ_PORT1_CONFIG                                   $READ_PORT1_CONFIG; // RW   6 bits
   .CONST $READ_PORT2_CONFIG                                              0xFFFF26; // RW   6 bits
   .CONST $_READ_PORT2_CONFIG                                   $READ_PORT2_CONFIG; // RW   6 bits
   .CONST $READ_PORT3_CONFIG                                              0xFFFF27; // RW   6 bits
   .CONST $_READ_PORT3_CONFIG                                   $READ_PORT3_CONFIG; // RW   6 bits
   .CONST $READ_PORT4_CONFIG                                              0xFFFF28; // RW   6 bits
   .CONST $_READ_PORT4_CONFIG                                   $READ_PORT4_CONFIG; // RW   6 bits
   .CONST $READ_PORT5_CONFIG                                              0xFFFF29; // RW   6 bits
   .CONST $_READ_PORT5_CONFIG                                   $READ_PORT5_CONFIG; // RW   6 bits
   .CONST $READ_PORT6_CONFIG                                              0xFFFF2A; // RW   6 bits
   .CONST $_READ_PORT6_CONFIG                                   $READ_PORT6_CONFIG; // RW   6 bits
   .CONST $READ_PORT7_CONFIG                                              0xFFFF2B; // RW   6 bits
   .CONST $_READ_PORT7_CONFIG                                   $READ_PORT7_CONFIG; // RW   6 bits
   .CONST $READ_PORT8_CONFIG                                              0xFFFF2C; // RW   6 bits
   .CONST $_READ_PORT8_CONFIG                                   $READ_PORT8_CONFIG; // RW   6 bits
   .CONST $READ_PORT9_CONFIG                                              0xFFFF2D; // RW   6 bits
   .CONST $_READ_PORT9_CONFIG                                   $READ_PORT9_CONFIG; // RW   6 bits
   .CONST $READ_PORT10_CONFIG                                             0xFFFF2E; // RW   6 bits
   .CONST $_READ_PORT10_CONFIG                                 $READ_PORT10_CONFIG; // RW   6 bits
   .CONST $READ_PORT11_CONFIG                                             0xFFFF2F; // RW   6 bits
   .CONST $_READ_PORT11_CONFIG                                 $READ_PORT11_CONFIG; // RW   6 bits
   .CONST $MCU_PORT_BUFFER_SET                                            0xFFFF30; // RW   1 bits
   .CONST $_MCU_PORT_BUFFER_SET                               $MCU_PORT_BUFFER_SET; // RW   1 bits
   .CONST $NOSIGNX_MCUWIN1                                                0xFFFF40; // RW   1 bits
   .CONST $_NOSIGNX_MCUWIN1                                       $NOSIGNX_MCUWIN1; // RW   1 bits
   .CONST $NOSIGNX_MCUWIN2                                                0xFFFF41; // RW   1 bits
   .CONST $_NOSIGNX_MCUWIN2                                       $NOSIGNX_MCUWIN2; // RW   1 bits

   // symbols for backwards compatibility
   .CONST $PORT_BUFFER_SET                                    $MCU_PORT_BUFFER_SET;

   .CONST $INT_ENABLE                                         $INT_UNBLOCK;
   .CONST $NUM_STALLS_MS                                      $NUM_CORE_STALLS_MS;
   .CONST $NUM_STALLS_LS                                      $NUM_CORE_STALLS_LS;
   .CONST $PM_WIN_ENABLE 									  $PMWIN_ENABLE;



#endif
