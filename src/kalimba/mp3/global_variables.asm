// *****************************************************************************
// Copyright (c) 2005 - 2015 Qualcomm Technologies International, Ltd.
// Part of ADK_CSR867x.WIN. 4.4
//
// *****************************************************************************

#ifndef MP3DEC_GLOBAL_VARIABLES_INCLUDED
#define MP3DEC_GLOBAL_VARIABLES_INCLUDED

#include "mp3_library.h"
#include "mp3.h"

// *****************************************************************************
// MODULE:
//    $mp3dec.variables
//
// DESCRIPTION:
//    Constants and variables used for the mp3 decoder
//
// INPUTS:
//    N/A
//
// OUTPUTS:
//    N/A
//
// TRASHED REGISTERS:
//    N/A
//
// *****************************************************************************

.MODULE $mp3dec;
   .DATASEGMENT DM;

   // high level constants
   .VAR          codec_struc;
   .VAR          skip_function;

   // control variables
   .VAR/DM1      frame_corrupt;
   .VAR/DM1      num_bytes_available;
   .VAR/DM1      frame_underflow;
   .VAR/DM1      id3_skip_num_bytes;
   .VAR          rfc3119_enable;

   #ifdef DEBUG_MP3DEC
      .VAR/DM1      frame_corrupt_errors = 0;
      .VAR/DM1      lostsync_errors = 0;
      .VAR/DM1      granule_count = 0;
   #endif

   // mp3 header variables
   .VAR          frame_version;
   .VAR          frame_layer;
   .VAR          protection_bit;
   .VAR          frame_crc;
   .VAR          crc_checksum;
   .VAR          sampling_freq;
   .VAR          framelength;
   .VAR          mode;
   .VAR          mode_extension;
   .VAR          copyright;
   .VAR          orig_copy;
   .VAR          emphasis;
   .VAR          bitrate;
   // initialise bit access routines
   .VAR          get_bitpos = 16;

   .VAR          framebitsread;

   // mp3 side info variables
   .VAR          main_data_begin;
   .VAR          scfsi[8];
   .VAR          part2_3_length[4];
   .VAR          big_valuesx2[4];
   .VAR          global_gain[4];
   .VAR          scalefac_compress[4];
   .VAR          block_type[4];
   .VAR          table_select[12];
   .VAR          subblock_gain[12];
   .VAR          region1_start[4];
   .VAR          region2_start[4];
   .VAR          preflag[4];
   .VAR          scale_multiplier_x4[4];
   .VAR          count1table_select[4];
   .VAR          intensity_scale;

   .VAR          current_grch = 0;
   .VAR          rzerolength[2];
   .VAR          rzerolength_previous[2];
   .VAR          intensity_sfb_l;
   .VAR          intensity_sfb_s[3];
   .VAR          scalefac[78];

   .VAR          slens[4];
   .VAR          nr_of_sfbs[4];

   // initialise bitres pointers and masks
   .VAR          bitres_inbitmask  = (1 << 23);
   .VAR          bitres_outbitmask = (1 << 23);
   .VAR          bitres_outptr_p23end;
   .VAR          bitres_outbitmask_p23end;
   .VAR          bitres_numbytes;
   .VAR          do_not_empty_bitres = 0;

   .VAR          arbuf_left_pointer;
   .VAR          arbuf_left_size;
   .VAR          arbuf_right_pointer;
   .VAR          arbuf_right_size;
   #ifdef BASE_REGISTER_MODE
      .VAR          arbuf_start_left;
      .VAR          arbuf_start_right;
   #endif


#ifdef MP3_USE_EXTERNAL_MEMORY
   // Pointers initialised by a call to $mp3dec.init_decoder
   .VAR          synthv_leftptr;
   .VAR          synthv_rightptr;
   .VAR          bitres_inptr;
   .VAR          bitres_outptr;
#else
   .VAR/DM2      oabuf_left[$mp3dec.mem.OABUF_LEFT_LENGTH];
   .VAR/DM2      oabuf_right[$mp3dec.mem.OABUF_RIGHT_LENGTH];

   #ifdef BASE_REGISTER_MODE
      .VAR/DM1  synthv_left[$mp3dec.mem.SYNTHV_LEFT_LENGTH];
      .VAR/DM1  synthv_right[$mp3dec.mem.SYNTHV_RIGHT_LENGTH];
   #else
      .VAR/DM1CIRC  synthv_left[$mp3dec.mem.SYNTHV_LEFT_LENGTH];
      .VAR/DM1CIRC  synthv_right[$mp3dec.mem.SYNTHV_RIGHT_LENGTH];
   #endif

   .VAR          synthv_leftptr = &synthv_left;
   .VAR          synthv_rightptr = &synthv_right;

   .VAR          bitres_inptr = &bitres;
   .VAR          bitres_outptr = &bitres;

   .VAR/DM1_SCRATCH      genbuf[$mp3dec.mem.GENBUF_LENGTH];

   #ifdef BASE_REGISTER_MODE
      .VAR/DM   bitres[$mp3dec.mem.BITRES_LENGTH];
   #else
      .VAR/DMCIRC   bitres[$mp3dec.mem.BITRES_LENGTH];
   #endif

#endif

   .VAR          avg_bitrate;

   // *****************************************************************************
   //                              -- constants --
   // *****************************************************************************

   .VAR          bitmask_lookup[17] =
                  0,     1,     3,     7,     15,    31,    63,    127,
                  255,   511,   1023,  2047,  4095,  8191,  16383, 32767, 65535;

   // layer 3 bit rates (kbit/s): forbidden = -1; (we don't support free format)
   .VAR          bit_rates[16] =
                    -1,   32,  40,  48,  56,  64,  80,  96,
                    112, 128, 160, 192, 224, 256, 320,  -1;

   .VAR          bit_rates_v2_and_v2p5[16] =
                    -1,    8,  16,  24,  32,  40,  48,  56,
                    64,   80,  96, 112, 128, 144, 160,  -1;

   // frame length = coef * bitrate * 16
   .VAR          framelen_freqcoef[] =
                 // 44100Hz         48000Hz         32000Hz
                 (90.0/441.0),    (9.0/48.0),     (9.0/32.0),
                 // 22050Hz         24000Hz         16000Hz
                 (4.5/22.05),     (4.5/24.0),     (4.5/16.0),
                 // 11025Hz         12000Hz          8000Hz
                 (4.5/11.025),    (4.5/12.0),     (4.5/8.0);

   // converts sampling_freq to granule length in usecs
   .VAR          sampfreq2granuleus[] =
                 // 44100Hz        48000Hz        32000Hz
                    13061,         12000,         18000,
                 // 22050Hz        24000Hz        16000Hz
                    26122,         24000,         36000,
                 // 11025Hz        12000Hz        8000Hz
                    52244,         48000,         72000;

                 // scalefac_compress     slen1   slen2   slen3   slen4
                 //                       (MPEG1 slen1)   (MPEG1 slen2)
                 //        0                0       0       0       0
                 //        1                1       1       0       0
                 //        2                2       2       0       0
                 //        3                3       3       0       0
                 //        4                0       0       3       3
                 //        5                1       1       1       1
                 //        6                2       2       1       1
                 //        7                3       3       1       1
                 //        8                1       1       2       2
                 //        9                2       2       2       2
                 //        10               3       3       2       2
                 //        11               1       1       3       3
                 //        12               2       2       3       3
                 //        13               3       3       3       3
                 //        14               2       2       4       4
                 //        15               3       3       4       4
   .VAR          scalefac_compress_slen_lookup[16] =
                 0x0000,  0x1100,  0x2200,  0x3300,
                 0x0033,  0x1111,  0x2211,  0x3311,
                 0x1122,  0x2222,  0x3322,  0x1133,
                 0x2233,  0x3333,  0x2244,  0x3344;

   .VAR          scalefac_nr_of_sfb_lookup[21] =
                 // MPEG1
                 6  + (5  << 5) + (5  << 10) + (5  << 15),   // block type = 0, 1, or 3
                 9  + (9  << 5) + (9  << 10) + (9  << 15),   // block type = 2, mixed = 0
                 8  + (9  << 5) + (9  << 10) + (9  << 15),   // block type = 2, mixed = 1

                 // MPEG2:  !IS   &&   (scalefac_compress < 400)
                 6  + (5  << 5) + (5  << 10) + (5  << 15),   // block type = 0, 1, or 3
                 9  + (9  << 5) + (9  << 10) + (9  << 15),   // block type = 2, mixed = 0
                 6  + (9  << 5) + (9  << 10) + (9  << 15),   // block type = 2, mixed = 1

                 // MPEG2:  !IS   &&   (400 <= scalefac_compress < 500)
                 6  + (5  << 5) + (7  << 10) + (3  << 15),   // block type = 0, 1, or 3
                 9  + (9  << 5) + (12 << 10) + (6  << 15),   // block type = 2, mixed = 0
                 6  + (9  << 5) + (12 << 10) + (6  << 15),   // block type = 2, mixed = 1

                 // MPEG2:  !IS   &&   (500 <= scalefac_compress < 512)
                 11 + (10 << 5) + (0  << 10) + (0  << 15),   // block type = 0, 1, or 3
                 18 + (18 << 5) + (0  << 10) + (0  << 15),   // block type = 2, mixed = 0
                 15 + (18 << 5) + (0  << 10) + (0  << 15),   // block type = 2, mixed = 1

                 // MPEG2:  IS   &&   (int_scalefac_compress < 180)
                 7  + (7  << 5) + (7  << 10) + (0  << 15),   // block type = 0, 1, or 3
                 12 + (12 << 5) + (12 << 10) + (0  << 15),   // block type = 2, mixed = 0
                 6  + (15 << 5) + (12 << 10) + (0  << 15),   // block type = 2, mixed = 1

                 // MPEG2:  IS   &&   (180 <= int_scalefac_compress < 244)
                 6  + (6  << 5) + (6  << 10) + (3  << 15),   // block type = 0, 1, or 3
                 12 + (9  << 5) + (9  << 10) + (6  << 15),   // block type = 2, mixed = 0
                 6  + (12 << 5) + (9  << 10) + (6  << 15),   // block type = 2, mixed = 1

                 // MPEG2:  IS   &&   (244 <= scalefac_compress < 256)
                 8  + (8  << 5) + (5  << 10) + (0  << 15),   // block type = 0, 1, or 3
                 15 + (12 << 5) + (9  << 10) + (0  << 15),   // block type = 2, mixed = 0
                 6  + (18 << 5) + (9  << 10) + (0  << 15);   // block type = 2, mixed = 1



   // scalefactor band widths for short blocks
   #if defined(MP3DEC_ZERO_FLASH)
      .VAR                    sfb_width_short[117] =
   #else
      .VAR                    sfb_width_short[13];
      .VAR/DMCONST_WINDOWED16    sfb_width_short_flash[117] =
   #endif
                 // 44.1KHz
                 4,   4,   4,   4,   6,   8,  10,  12,  14,  18,  22,  30,  56,
                 // 48.0KHz
                 4,   4,   4,   4,   6,   6,  10,  12,  14,  16,  20,  26,  66,
                 // 32.0KHz
                 4,   4,   4,   4,   6,   8,  12,  16,  20,  26,  34,  42,  12,
                 // 22.05KHz
                 4,   4,   4,   6,   6,   8,  10,  14,  18,  26,  32,  42,  18,
                 // 24.0KHz
                 4,   4,   4,   6,   8,  10,  12,  14,  18,  24,  32,  44,  12,
                 // 16.0KHz
                 4,   4,   4,   6,   8,  10,  12,  14,  18,  24,  30,  40,  18,
                 // 11.05KHz
                 4,   4,   4,   6,   8,  10,  12,  14,  18,  24,  30,  40,  18,
                 // 12.0KHz
                 4,   4,   4,   6,   8,  10,  12,  14,  18,  24,  30,  40,  18,
                 // 8.0KHz
                 8,   8,   8,  12,  16,  20,  24,  28,  36,   2,   2,   2,  26;



   // scalefactor band widths for long blocks
   #if defined(MP3DEC_ZERO_FLASH)
      .VAR                    sfb_width_long[198] =
   #else
      .VAR                    sfb_width_long[22];
      .VAR/DMCONST_WINDOWED16    sfb_width_long_flash[198] =
   #endif
                 // 44.1KHz
                 4,   4,   4,   4,   4,   4,   6,   6,   8,   8,   10,  12,  16,
                 20,  24,  28,  34,  42,  50,  54,  76,  158,
                 // 48.0KHz
                 4,   4,   4,   4,   4,   4,   6,   6,   6,   8,   10,  12,  16,
                 18,  22,  28,  34,  40,  46,  54,  54,  192,
                 // 32.0KHz
                 4,   4,   4,   4,   4,   4,   6,   6,   8,   10,  12,  16,  20,
                 24,  30,  38,  46,  56,  68,  84,  102, 26,
                 // 22.05KHz
                 6,   6,   6,   6,   6,   6,   8,   10,  12,  14,  16,  20,  24,
                 28,  32,  38,  46,  52,  60,  68,  58,  54,
                 // 24.0KHz
                 6,   6,   6,   6,   6,   6,   8,   10,  12,  14,  16,  18,  22,
                 26,  32,  38,  46,  54,  62,  70,  76,  36,
                 // 16.0KHz
                 6,   6,   6,   6,   6,   6,   8,   10,  12,  14,  16,  20,  24,
                 28,  32,  38,  46,  52,  60,  68,  58,  54,
                 // 11.05KHz
                 6,   6,   6,   6,   6,   6,   8,   10,  12,  14,  16,  20,  24,
                 28,  32,  38,  46,  52,  60,  68,  58,  54,
                 // 12.0KHz
                 6,   6,   6,   6,   6,   6,   8,   10,  12,  14,  16,  20,  24,
                 28,  32,  38,  46,  52,  60,  68,  58,  54,
                 // 8.0KHz
                 12,  12,  12,  12,  12,  12,  16,  20,  24,  28,  32,  40,  48,
                 56,  64,  76,  90,  2,   2,   2,   2,   2;


   // preemphasis table
   .VAR          pretab[22] =
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0;


   // Huffman tables
   #include "huffman_tables.asm"

   .VAR          nolinbits[32] =
                 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                 1,  2,  3,  4,  6,  8, 10, 13,  4,  5,  6,  7,  8,  9, 11, 13;


   .VAR          hufftable_lookup[34] =
                 0,    // hufftable0 x=y=0
                 &hufftable1,
                 &hufftable2,
                 &hufftable3,
                 0,    // hufftable4 not used
                 &hufftable5,
                 &hufftable6,
                 &hufftable7,
                 &hufftable8,
                 &hufftable9,
                 &hufftable10,
                 &hufftable11,
                 &hufftable12,
                 &hufftable13,
                 0,    // hufftable14 not used
                 &hufftable15,
                 &hufftable16,
                 &hufftable16,
                 &hufftable16,
                 &hufftable16,
                 &hufftable16,
                 &hufftable16,
                 &hufftable16,
                 &hufftable16,
                 &hufftable24,
                 &hufftable24,
                 &hufftable24,
                 &hufftable24,
                 &hufftable24,
                 &hufftable24,
                 &hufftable24,
                 &hufftable24,
                 &hufftableA,
                 &hufftableB;



   //  X^(4/3) Speedup coefficients: generated with x43calc.m
/*
   .VAR          x43_lookup1[36] =
                      19,        17,        16,        15,        13,        12,
                      11,         9,         8,   -293917,   -616693,   -489404,
                 -388337,   -616117,   -488490,   -386889,   -611539,   -481283,
                 2347326,   3223450,   2558622,   2031047,   3224934,   2560978,
                 2034788,   3236826,   2579897,   4698663,   8008380,   6356045,
                 5044462,   8006523,   6353098,   5039788,   7991706,   6329649;

   .VAR          x43_lookup2[36] =
                      -1,        19,        16,        15,        14,        12,
                      11,        10,         8,         0,   -243538,   -773114,
                 -613505,   -486756,   -772095,   -611890,   -484200,   -764028,
                       0,    642908,   2041202,   1620255,   1286237,   2042538,
                 1622376,   1289608,   2053254,         0,   2243000,   7120915,
                 5651609,   4485264,   7118577,   5647899,   4479382,   7099944;

   .VAR          x43_lookup32[64] =
                      -1,         1,         2,         3,         3,         4,
                       4,         4,         5,         5,         5,         5,
                       5,         5,         6,         6,         6,         6,
                       6,         6,         6,         6,         6,         7,
                       7,         7,         7,         7,         7,         7,
                       7,         7,         0,   4194304,   5284492,   4536925,
                 6658043,   4482599,   5716167,   7020488,   4194304,   4907533,
                 5647721,   6413033,   7201919,   8013048,   4422630,   4848770,
                 5284492,   5729391,   6183105,   6645302,   7115683,   7593972,
                 8079916,   4286640,   4536925,   4790711,   5047904,   5308416,
                 5572165,   5839073,   6109068,   6382079;
*/


   .VAR          x43_lookup1[36] =
                      12,        10,         9,         8,         6,         5,
                       4,         2,         1,   -293917,   -616693,   -489404,
                 -388337,   -616117,   -488490,   -386889,   -611539,   -481283,
                 2347326,   3223450,   2558622,   2031047,   3224934,   2560978,
                 2034788,   3236826,   2579897,   4698663,   8008380,   6356045,
                 5044462,   8006523,   6353098,   5039788,   7991706,   6329649;

   .VAR          x43_lookup2[36] =
                      -8,        12,         9,         8,         7,         5,
                       4,         3,         1,         0,   -243538,   -773114,
                 -613505,   -486756,   -772095,   -611890,   -484200,   -764028,
                       0,    642908,   2041202,   1620255,   1286237,   2042538,
                 1622376,   1289608,   2053254,         0,   2243000,   7120915,
                 5651609,   4485264,   7118577,   5647899,   4479382,   7099944;

   .VAR          x43_lookup32[64] =       // round((abs(-32:31).^(4/3)) * 2^16).*sign(-32:31)
                -6658043,  -6382079,  -6109068,  -5839073,  -5572165,  -5308416,  -5047904,  -4790711,
                -4536925,  -4286640,  -4039958,  -3796986,  -3557842,  -3322651,  -3091553,  -2864696,
                -2642246,  -2424385,  -2211315,  -2003262,  -1800480,  -1603258,  -1411930,  -1226883,
                -1048576,   -877561,   -714521,   -560325,   -416128,   -283558,   -165140,    -65536,
                       0,     65536,    165140,    283558,    416128,    560325,    714521,    877561,
                 1048576,   1226883,   1411930,   1603258,   1800480,   2003262,   2211315,   2424385,
                 2642246,   2864696,   3091553,   3322651,   3557842,   3796986,   4039958,   4286640,
                 4536925,   4790711,   5047904,   5308416,   5572165,   5839073,   6109068,   6382079;


   //  2^(x/4) Speedup coefficients:
   .VAR          two2qtrx_lookup[4] =
                 0.500000000, 0.594603557,
                 0.707106781, 0.840896415;


   // Intensity stereo coefficients: MPEG1
   //
   // generated with the following matlab code:
   //
   //   is_ratio=tan((0:6)*pi/12);
   //   isleft_coef = is_ratio./(1+is_ratio)
   //
   //   isright_coef = ones(1,7)./(1+is_ratio)
   .BLOCK is_coef;
      .VAR          isleft_coef[7] =
                    0.00000000000,   0.21132486540,   0.36602540378,   0.50000000000,
                    0.63397459621,   0.78867513459,   1.00000000000;
      // dummy data so that difference in addresses between left and right is
      // always 32 no matter what MPEG verison used
      .VAR          isleft_dummy[25];

      .VAR          isright_coef[7] =
                    1.00000000000,   0.78867513459,   0.63397459621,   0.50000000000,
                    0.36602540378,   0.21132486540,   0.00000000000;
   .ENDBLOCK;

   // Intensity stereo coefficients: MPEG2
   //
   // generated with the following matlab code:
   //
   //   if intensity_scale == 1
   //      i0 = 1/sqrt(2);
   //   else
   //      i0 = 1/sqrt(sqrt(2));
   //   end
   //
   //   is_lse_left_coef = ones(1,15);
   //   is_lse_left_coef(2:2:16) = i0.^(1:8)
   //
   //   is_lse_right_coef = ones(1,15);
   //   is_lse_right_coef(3:2:15) = i0.^(1:7)
   .BLOCK is_coef_lse_scale0;
      .VAR          isleft_coef_lse_scale0[32] =
                    1.00000000000,   0.84089641525,   1.00000000000,   0.70710678119,  // intensity_scale==0
                    1.00000000000,   0.59460355750,   1.00000000000,   0.50000000000,
                    1.00000000000,   0.42044820763,   1.00000000000,   0.35355339059,
                    1.00000000000,   0.29730177875,   1.00000000000,   0.25000000000,
                    1.00000000000,   0.21022410381,   1.00000000000,   0.17677669530,
                    1.00000000000,   0.14865088938,   1.00000000000,   0.12500000000,
                    1.00000000000,   0.10511205191,   1.00000000000,   0.08838834765,
                    1.00000000000,   0.07432544469,   1.00000000000,   0.06250000000;


      .VAR          isright_coef_lse_scale0[32] =
                    1.00000000000,   1.00000000000,   0.84089641525,   1.00000000000,  // intensity_scale==0
                    0.70710678119,   1.00000000000,   0.59460355750,   1.00000000000,
                    0.50000000000,   1.00000000000,   0.42044820763,   1.00000000000,
                    0.35355339059,   1.00000000000,   0.29730177875,   1.00000000000,
                    0.25000000000,   1.00000000000,   0.21022410381,   1.00000000000,
                    0.17677669530,   1.00000000000,   0.14865088938,   1.00000000000,
                    0.12500000000,   1.00000000000,   0.10511205191,   1.00000000000,
                    0.08838834765,   1.00000000000,   0.07432544469,   1.00000000000;
   .ENDBLOCK;


   .BLOCK is_coef_lse_scale1;
      .VAR          isleft_coef_lse_scale1[32] =
                    1.00000000000,   0.70710678119,   1.00000000000,   0.50000000000,  // intensity_scale==1
                    1.00000000000,   0.35355339059,   1.00000000000,   0.25000000000,
                    1.00000000000,   0.17677669530,   1.00000000000,   0.12500000000,
                    1.00000000000,   0.08838834765,   1.00000000000,   0.06250000000,
                    1.00000000000,   0.04419417382,   1.00000000000,   0.03125000000,
                    1.00000000000,   0.02209708691,   1.00000000000,   0.01562500000,
                    1.00000000000,   0.01104854346,   1.00000000000,   0.00781250000,
                    1.00000000000,   0.00552427173,   1.00000000000,   0.00390625000;


      .VAR          isright_coef_lse_scale1[32] =
                    1.00000000000,   1.00000000000,   0.70710678119,   1.00000000000,  // intensity_scale==1
                    0.50000000000,   1.00000000000,   0.35355339059,   1.00000000000,
                    0.25000000000,   1.00000000000,   0.17677669530,   1.00000000000,
                    0.12500000000,   1.00000000000,   0.08838834765,   1.00000000000,
                    0.06250000000,   1.00000000000,   0.04419417382,   1.00000000000,
                    0.03125000000,   1.00000000000,   0.02209708691,   1.00000000000,
                    0.01562500000,   1.00000000000,   0.01104854346,   1.00000000000,
                    0.00781250000,   1.00000000000,   0.00552427173,   1.00000000000;
   .ENDBLOCK;




   // Alias reduction butterfly coefficients
   //
   // Generated with the following matlab code:
   //
   // ci = [-0.6  -0.535  -0.33  -0.185  -0.095  -0.041  -0.0142  -0.0037];
   // ar_cs = 1./sqrt(1 + ci.^2)
   // ar_ca = ci./sqrt(1 + ci.^2)
   .VAR/DM1      ar_cs[8] =
                 0.85749292571,   0.88174199731,   0.94962864910,   0.98331459249,
                 0.99551781606,   0.99916055817,   0.99989919524,   0.99999315507;

   .VAR/DM1      ar_ca[8] =
                 -0.51449575542,  -0.47173196856,  -0.31337745420,  -0.18191319961,
                 -0.09457419252,  -0.04096558288,  -0.01419856857,  -0.00369997467;


   // IMDCT Long blocks matrix - just rows 9 to 26
   // (other rows are either the same or -ve of one of these rows)
   //
   // Generated with the following matlab code:
   //
   //    M = 18;
   //    for m=0:(M-1),
   //      tmp(m+1,1:M*2) = cos((m + 0.5)*((0:(M*2-1)) + M/2 + 0.5)*pi/M);
   //    end
   //    tmp = tmp(:,10:27);
   //    imdct_longcoef = tmp(:)
   .VAR/DM1      imdct_longcoef[324] =
                 -0.04361938736,   0.13052619222,  -0.21643961393,   0.30070579950,
                 -0.38268343236,   0.46174861323,  -0.53729960834,   0.60876142900,
                 -0.67559020761,   0.73727733681,  -0.79335334029,   0.84339144581,
                 -0.88701083317,   0.92387953251,  -0.95371695074,   0.97629600711,
                 -0.99144486137,   0.99904822158,  -0.13052619222,   0.38268343236,
                 -0.60876142900,   0.79335334029,  -0.92387953251,   0.99144486137,
                 -0.99144486137,   0.92387953251,  -0.79335334029,   0.60876142900,
                 -0.38268343236,   0.13052619222,   0.13052619222,  -0.38268343236,
                  0.60876142900,  -0.79335334029,   0.92387953251,  -0.99144486137,
                 -0.21643961393,   0.60876142900,  -0.88701083317,   0.99904822158,
                 -0.92387953251,   0.67559020761,  -0.30070579950,  -0.13052619222,
                  0.53729960834,  -0.84339144581,   0.99144486137,  -0.95371695074,
                  0.73727733681,  -0.38268343236,  -0.04361938736,   0.46174861323,
                 -0.79335334029,   0.97629600711,  -0.30070579950,   0.79335334029,
                 -0.99904822158,   0.84339144581,  -0.38268343236,  -0.21643961393,
                  0.73727733681,  -0.99144486137,   0.88701083317,  -0.46174861323,
                 -0.13052619222,   0.67559020761,  -0.97629600711,   0.92387953251,
                 -0.53729960834,  -0.04361938736,   0.60876142900,  -0.95371695074,
                 -0.38268343236,   0.92387953251,  -0.92387953251,   0.38268343236,
                  0.38268343236,  -0.92387953251,   0.92387953251,  -0.38268343236,
                 -0.38268343236,   0.92387953251,  -0.92387953251,   0.38268343236,
                  0.38268343236,  -0.92387953251,   0.92387953251,  -0.38268343236,
                 -0.38268343236,   0.92387953251,  -0.46174861323,   0.99144486137,
                 -0.67559020761,  -0.21643961393,   0.92387953251,  -0.84339144581,
                  0.04361938736,   0.79335334029,  -0.95371695074,   0.30070579950,
                  0.60876142900,  -0.99904822158,   0.53729960834,   0.38268343236,
                 -0.97629600711,   0.73727733681,   0.13052619222,  -0.88701083317,
                 -0.53729960834,   0.99144486137,  -0.30070579950,  -0.73727733681,
                  0.92387953251,  -0.04361938736,  -0.88701083317,   0.79335334029,
                  0.21643961393,  -0.97629600711,   0.60876142900,   0.46174861323,
                 -0.99904822158,   0.38268343236,   0.67559020761,  -0.95371695074,
                  0.13052619222,   0.84339144581,  -0.60876142900,   0.92387953251,
                  0.13052619222,  -0.99144486137,   0.38268343236,   0.79335334029,
                 -0.79335334029,  -0.38268343236,   0.99144486137,  -0.13052619222,
                 -0.92387953251,   0.60876142900,   0.60876142900,  -0.92387953251,
                 -0.13052619222,   0.99144486137,  -0.38268343236,  -0.79335334029,
                 -0.67559020761,   0.79335334029,   0.53729960834,  -0.88701083317,
                 -0.38268343236,   0.95371695074,   0.21643961393,  -0.99144486137,
                 -0.04361938736,   0.99904822158,  -0.13052619222,  -0.97629600711,
                  0.30070579950,   0.92387953251,  -0.46174861323,  -0.84339144581,
                  0.60876142900,   0.73727733681,  -0.73727733681,   0.60876142900,
                  0.84339144581,  -0.46174861323,  -0.92387953251,   0.30070579950,
                  0.97629600711,  -0.13052619222,  -0.99904822158,  -0.04361938736,
                  0.99144486137,   0.21643961393,  -0.95371695074,  -0.38268343236,
                  0.88701083317,   0.53729960834,  -0.79335334029,  -0.67559020761,
                 -0.79335334029,   0.38268343236,   0.99144486137,   0.13052619222,
                 -0.92387953251,  -0.60876142900,   0.60876142900,   0.92387953251,
                 -0.13052619222,  -0.99144486137,  -0.38268343236,   0.79335334029,
                  0.79335334029,  -0.38268343236,  -0.99144486137,  -0.13052619222,
                  0.92387953251,   0.60876142900,  -0.84339144581,   0.13052619222,
                  0.95371695074,   0.67559020761,  -0.38268343236,  -0.99904822158,
                 -0.46174861323,   0.60876142900,   0.97629600711,   0.21643961393,
                 -0.79335334029,  -0.88701083317,   0.04361938736,   0.92387953251,
                  0.73727733681,  -0.30070579950,  -0.99144486137,  -0.53729960834,
                 -0.88701083317,  -0.13052619222,   0.73727733681,   0.97629600711,
                  0.38268343236,  -0.53729960834,  -0.99904822158,  -0.60876142900,
                  0.30070579950,   0.95371695074,   0.79335334029,  -0.04361938736,
                 -0.84339144581,  -0.92387953251,  -0.21643961393,   0.67559020761,
                  0.99144486137,   0.46174861323,  -0.92387953251,  -0.38268343236,
                  0.38268343236,   0.92387953251,   0.92387953251,   0.38268343236,
                 -0.38268343236,  -0.92387953251,  -0.92387953251,  -0.38268343236,
                  0.38268343236,   0.92387953251,   0.92387953251,   0.38268343236,
                 -0.38268343236,  -0.92387953251,  -0.92387953251,  -0.38268343236,
                 -0.95371695074,  -0.60876142900,  -0.04361938736,   0.53729960834,
                  0.92387953251,   0.97629600711,   0.67559020761,   0.13052619222,
                 -0.46174861323,  -0.88701083317,  -0.99144486137,  -0.73727733681,
                 -0.21643961393,   0.38268343236,   0.84339144581,   0.99904822158,
                  0.79335334029,   0.30070579950,  -0.97629600711,  -0.79335334029,
                 -0.46174861323,  -0.04361938736,   0.38268343236,   0.73727733681,
                  0.95371695074,   0.99144486137,   0.84339144581,   0.53729960834,
                  0.13052619222,  -0.30070579950,  -0.67559020761,  -0.92387953251,
                 -0.99904822158,  -0.88701083317,  -0.60876142900,  -0.21643961393,
                 -0.99144486137,  -0.92387953251,  -0.79335334029,  -0.60876142900,
                 -0.38268343236,  -0.13052619222,   0.13052619222,   0.38268343236,
                  0.60876142900,   0.79335334029,   0.92387953251,   0.99144486137,
                  0.99144486137,   0.92387953251,   0.79335334029,   0.60876142900,
                  0.38268343236,   0.13052619222,  -0.99904822158,  -0.99144486137,
                 -0.97629600711,  -0.95371695074,  -0.92387953251,  -0.88701083317,
                 -0.84339144581,  -0.79335334029,  -0.73727733681,  -0.67559020761,
                 -0.60876142900,  -0.53729960834,  -0.46174861323,  -0.38268343236,
                 -0.30070579950,  -0.21643961393,  -0.13052619222,  -0.04361938736;



   // IMDCT Short blocks matrix including windowing - all rows (1 to 12)
   //
   // Generated with the following matlab code:
   //
   //    M = 6;
   //    for m=0:(M-1),
   //      tmp(m+1,1:M*2) = cos((m + 0.5)*((0:(M*2-1)) + M/2 + 0.5)*pi/M);
   //    end
   //    tmp = tmp .* (ones(6,1)*sin(pi/12*((0:11) + 0.5)));
   //    imdct_shortcoef = tmp(:)
   .VAR/DM1      imdct_shortcoef[72] =
                  0.07945931129,  -0.12059047744,  -0.01703708685,   0.12940952255,
                 -0.04995021125,  -0.10355339059,   0.14644660940,  -0.35355339059,
                  0.35355339059,  -0.14644660940,  -0.14644660940,   0.35355339059,
                  0.07945931129,  -0.23296291314,   0.37059047744,  -0.48296291314,
                  0.56242222444,  -0.60355339059,  -0.10355339059,   0.30360317934,
                 -0.48296291314,   0.62940952255,  -0.73296291314,   0.78656609248,
                 -0.35355339059,   0.85355339059,  -0.85355339059,   0.35355339059,
                  0.35355339059,  -0.85355339059,  -0.60355339059,   0.91597561503,
                  0.12940952255,  -0.98296291314,   0.37940952255,   0.78656609248,
                 -0.78656609248,   0.37940952255,   0.98296291314,   0.12940952255,
                 -0.91597561503,  -0.60355339059,  -0.85355339059,  -0.35355339059,
                  0.35355339059,   0.85355339059,   0.85355339059,   0.35355339059,
                 -0.78656609248,  -0.73296291314,  -0.62940952255,  -0.48296291314,
                 -0.30360317934,  -0.10355339059,  -0.60355339059,  -0.56242222444,
                 -0.48296291314,  -0.37059047744,  -0.23296291314,  -0.07945931129,
                 -0.35355339059,  -0.14644660940,   0.14644660940,   0.35355339059,
                  0.35355339059,   0.14644660940,  -0.10355339059,   0.04995021125,
                  0.12940952255,   0.01703708685,  -0.12059047744,  -0.07945931129;


   // Normal, Start, and Stop window functions:
   //
   // Generated with the following matlab code:
   //
   //   tmp = sin(pi/36*((0:35) + 0.5));
   //   winfunc_normcoefs = tmp(:)
   //
   //   tmp = [sin(pi/36*((0:17) + 0.5)) ...
   //          ones(1,6) ...
   //          sin(pi/12*((6:11) + 0.5)) ...
   //          zeros(1,6)];
   //   winfunc_startcoefs = tmp(:)
   //
   //   tmp = [zeros(1,6) ...
   //          sin(pi/12*((0:5) + 0.5)) ...
   //          ones(1,6) ...
   //          sin(pi/36*((18:35) + 0.5))];
   //   winfunc_endcoefs = tmp(:)
   .VAR/DM1      winfunc_normcoefs[36] =
                 0.04361938736,   0.13052619222,   0.21643961393,   0.30070579950,
                 0.38268343236,   0.46174861323,   0.53729960834,   0.60876142900,
                 0.67559020761,   0.73727733681,   0.79335334029,   0.84339144581,
                 0.88701083317,   0.92387953251,   0.95371695074,   0.97629600711,
                 0.99144486137,   0.99904822158,   0.99904822158,   0.99144486137,
                 0.97629600711,   0.95371695074,   0.92387953251,   0.88701083317,
                 0.84339144581,   0.79335334029,   0.73727733681,   0.67559020761,
                 0.60876142900,   0.53729960834,   0.46174861323,   0.38268343236,
                 0.30070579950,   0.21643961393,   0.13052619222,   0.04361938736;

   .VAR/DM1      winfunc_startcoefs[36] =
                 0.04361938736,   0.13052619222,   0.21643961393,   0.30070579950,
                 0.38268343236,   0.46174861323,   0.53729960834,   0.60876142900,
                 0.67559020761,   0.73727733681,   0.79335334029,   0.84339144581,
                 0.88701083317,   0.92387953251,   0.95371695074,   0.97629600711,
                 0.99144486137,   0.99904822158,   1.00000000000,   1.00000000000,
                 1.00000000000,   1.00000000000,   1.00000000000,   1.00000000000,
                 0.99144486137,   0.92387953251,   0.79335334029,   0.60876142900,
                 0.38268343236,   0.13052619222,   0.00000000000,   0.00000000000,
                 0.00000000000,   0.00000000000,   0.00000000000,   0.00000000000;

   .VAR/DM1      winfunc_endcoefs[36] =
                 0.00000000000,   0.00000000000,   0.00000000000,   0.00000000000,
                 0.00000000000,   0.00000000000,   0.13052619222,   0.38268343236,
                 0.60876142900,   0.79335334029,   0.92387953251,   0.99144486137,
                 1.00000000000,   1.00000000000,   1.00000000000,   1.00000000000,
                 1.00000000000,   1.00000000000,   0.99904822158,   0.99144486137,
                 0.97629600711,   0.95371695074,   0.92387953251,   0.88701083317,
                 0.84339144581,   0.79335334029,   0.73727733681,   0.67559020761,
                 0.60876142900,   0.53729960834,   0.46174861323,   0.38268343236,
                 0.30070579950,   0.21643961393,   0.13052619222,   0.04361938736;



   // Even and Odd DCT16 matrix (note they are negative)
   //
   // Generated with the following matlab code:
   //
   //   for k=0:15, dct16(k+1,:) = cos((0:15)*pi/(32)*(2*k+1)); end
   //   dct16=dct16';
   //
   //   for k=0:31, dct32(k+1,:) = cos((0:31)*pi/(64)*(2*k+1)); end
   //   dct32=dct32';
   //
   //   G=zeros(16,16); for k=1:15, G(k,k)=1; G(k+1,k)=1; end; G(16,16)=1;
   //   EBF = zeros(16,32); for k=1:16, EBF(k,k) = 1; EBF(k,33-k) = 1; end;
   //   OBF = zeros(16,32); for k=1:16, OBF(k,k) = 1; OBF(k,33-k) = -1; end;
   //   E = zeros(32,16); for k=1:16, E(k*2-1,k) = 1; end;
   //   O = zeros(32,16); for k=1:16, O(k*2,k) = 1; end;
   //   H = (dct16\(G\(O\(dct32-E*dct16*EBF))))/OBF;
   //
   //   dct16_even = -dct16
   //   dct16_odd = -G*dct16*H
   .VAR/DM2      dct16_even[256] =
                 -1.00000000000,  -1.00000000000,  -1.00000000000,  -1.00000000000,
                 -1.00000000000,  -1.00000000000,  -1.00000000000,  -1.00000000000,
                 -1.00000000000,  -1.00000000000,  -1.00000000000,  -1.00000000000,
                 -1.00000000000,  -1.00000000000,  -1.00000000000,  -1.00000000000,
                 -0.99518472667,  -0.95694033573,  -0.88192126434,  -0.77301045336,
                 -0.63439328416,  -0.47139673682,  -0.29028467725,  -0.09801714032,
                  0.09801714032,   0.29028467725,   0.47139673682,   0.63439328416,
                  0.77301045336,   0.88192126434,   0.95694033573,   0.99518472667,
                 -0.98078528040,  -0.83146961230,  -0.55557023301,  -0.19509032201,
                  0.19509032201,   0.55557023301,   0.83146961230,   0.98078528040,
                  0.98078528040,   0.83146961230,   0.55557023301,   0.19509032201,
                 -0.19509032201,  -0.55557023301,  -0.83146961230,  -0.98078528040,
                 -0.95694033573,  -0.63439328416,  -0.09801714032,   0.47139673682,
                  0.88192126434,   0.99518472667,   0.77301045336,   0.29028467725,
                 -0.29028467725,  -0.77301045336,  -0.99518472667,  -0.88192126434,
                 -0.47139673682,   0.09801714032,   0.63439328416,   0.95694033573,
                 -0.92387953251,  -0.38268343236,   0.38268343236,   0.92387953251,
                  0.92387953251,   0.38268343236,  -0.38268343236,  -0.92387953251,
                 -0.92387953251,  -0.38268343236,   0.38268343236,   0.92387953251,
                  0.92387953251,   0.38268343236,  -0.38268343236,  -0.92387953251,
                 -0.88192126434,  -0.09801714032,   0.77301045336,   0.95694033573,
                  0.29028467725,  -0.63439328416,  -0.99518472667,  -0.47139673682,
                  0.47139673682,   0.99518472667,   0.63439328416,  -0.29028467725,
                 -0.95694033573,  -0.77301045336,   0.09801714032,   0.88192126434,
                 -0.83146961230,   0.19509032201,   0.98078528040,   0.55557023301,
                 -0.55557023301,  -0.98078528040,  -0.19509032201,   0.83146961230,
                  0.83146961230,  -0.19509032201,  -0.98078528040,  -0.55557023301,
                  0.55557023301,   0.98078528040,   0.19509032201,  -0.83146961230,
                 -0.77301045336,   0.47139673682,   0.95694033573,  -0.09801714032,
                 -0.99518472667,  -0.29028467725,   0.88192126434,   0.63439328416,
                 -0.63439328416,  -0.88192126434,   0.29028467725,   0.99518472667,
                  0.09801714032,  -0.95694033573,  -0.47139673682,   0.77301045336,
                 -0.70710678118,   0.70710678118,   0.70710678118,  -0.70710678118,
                 -0.70710678118,   0.70710678118,   0.70710678118,  -0.70710678118,
                 -0.70710678118,   0.70710678118,   0.70710678118,  -0.70710678118,
                 -0.70710678118,   0.70710678118,   0.70710678118,  -0.70710678118,
                 -0.63439328416,   0.88192126434,   0.29028467725,  -0.99518472667,
                  0.09801714032,   0.95694033573,  -0.47139673682,  -0.77301045336,
                  0.77301045336,   0.47139673682,  -0.95694033573,  -0.09801714032,
                  0.99518472667,  -0.29028467725,  -0.88192126434,   0.63439328416,
                 -0.55557023301,   0.98078528040,  -0.19509032201,  -0.83146961230,
                  0.83146961230,   0.19509032201,  -0.98078528040,   0.55557023301,
                  0.55557023301,  -0.98078528040,   0.19509032201,   0.83146961230,
                 -0.83146961230,  -0.19509032201,   0.98078528040,  -0.55557023301,
                 -0.47139673682,   0.99518472667,  -0.63439328416,  -0.29028467725,
                  0.95694033573,  -0.77301045336,  -0.09801714032,   0.88192126434,
                 -0.88192126434,   0.09801714032,   0.77301045336,  -0.95694033573,
                  0.29028467725,   0.63439328416,  -0.99518472667,   0.47139673682,
                 -0.38268343236,   0.92387953251,  -0.92387953251,   0.38268343236,
                  0.38268343236,  -0.92387953251,   0.92387953251,  -0.38268343236,
                 -0.38268343236,   0.92387953251,  -0.92387953251,   0.38268343236,
                  0.38268343236,  -0.92387953251,   0.92387953251,  -0.38268343236,
                 -0.29028467725,   0.77301045336,  -0.99518472667,   0.88192126434,
                 -0.47139673682,  -0.09801714032,   0.63439328416,  -0.95694033573,
                  0.95694033573,  -0.63439328416,   0.09801714032,   0.47139673682,
                 -0.88192126434,   0.99518472667,  -0.77301045336,   0.29028467725,
                 -0.19509032201,   0.55557023301,  -0.83146961230,   0.98078528040,
                 -0.98078528040,   0.83146961230,  -0.55557023301,   0.19509032201,
                  0.19509032201,  -0.55557023301,   0.83146961230,  -0.98078528040,
                  0.98078528040,  -0.83146961230,   0.55557023301,  -0.19509032201,
                 -0.09801714032,   0.29028467725,  -0.47139673682,   0.63439328416,
                 -0.77301045336,   0.88192126434,  -0.95694033573,   0.99518472667,
                 -0.99518472667,   0.95694033573,  -0.88192126434,   0.77301045336,
                 -0.63439328416,   0.47139673682,  -0.29028467725,   0.09801714032;


   .VAR/DM2      dct16_odd[256] =
                 -0.99879545620,  -0.98917650996,  -0.97003125319,  -0.94154406518,
                 -0.90398929312,  -0.85772861000,  -0.80320753148,  -0.74095112535,
                 -0.67155895484,  -0.59569930449,  -0.51410274419,  -0.42755509343,
                 -0.33688985339,  -0.24298017990,  -0.14673047445,  -0.04906767432,
                 -0.98917650996,  -0.90398929312,  -0.74095112535,  -0.51410274419,
                 -0.24298017990,   0.04906767432,   0.33688985339,   0.59569930449,
                  0.80320753148,   0.94154406518,   0.99879545620,   0.97003125319,
                  0.85772861000,   0.67155895484,   0.42755509343,   0.14673047445,
                 -0.97003125319,  -0.74095112535,  -0.33688985339,   0.14673047445,
                  0.59569930449,   0.90398929312,   0.99879545620,   0.85772861000,
                  0.51410274419,   0.04906767432,  -0.42755509343,  -0.80320753148,
                 -0.98917650996,  -0.94154406518,  -0.67155895484,  -0.24298017990,
                 -0.94154406518,  -0.51410274419,   0.14673047445,   0.74095112535,
                  0.99879545620,   0.80320753148,   0.24298017990,  -0.42755509343,
                 -0.90398929312,  -0.97003125319,  -0.59569930449,   0.04906767432,
                  0.67155895484,   0.98917650996,   0.85772861000,   0.33688985339,
                 -0.90398929312,  -0.24298017990,   0.59569930449,   0.99879545620,
                  0.67155895484,  -0.14673047445,  -0.85772861000,  -0.94154406518,
                 -0.33688985339,   0.51410274419,   0.98917650996,   0.74095112535,
                 -0.04906767432,  -0.80320753148,  -0.97003125319,  -0.42755509343,
                 -0.85772861000,   0.04906767432,   0.90398929312,   0.80320753148,
                 -0.14673047445,  -0.94154406518,  -0.74095112535,   0.24298017990,
                  0.97003125319,   0.67155895484,  -0.33688985339,  -0.98917650996,
                 -0.59569930449,   0.42755509343,   0.99879545620,   0.51410274419,
                 -0.80320753148,   0.33688985339,   0.99879545620,   0.24298017990,
                 -0.85772861000,  -0.74095112535,   0.42755509343,   0.98917650996,
                  0.14673047445,  -0.90398929312,  -0.67155895484,   0.51410274419,
                  0.97003125319,   0.04906767432,  -0.94154406518,  -0.59569930449,
                 -0.74095112535,   0.59569930449,   0.85772861000,  -0.42755509343,
                 -0.94154406518,   0.24298017990,   0.98917650996,  -0.04906767432,
                 -0.99879545620,  -0.14673047445,   0.97003125319,   0.33688985339,
                 -0.90398929312,  -0.51410274419,   0.80320753148,   0.67155895484,
                 -0.67155895484,   0.80320753148,   0.51410274419,  -0.90398929312,
                 -0.33688985339,   0.97003125319,   0.14673047445,  -0.99879545620,
                  0.04906767432,   0.98917650996,  -0.24298017990,  -0.94154406518,
                  0.42755509343,   0.85772861000,  -0.59569930449,  -0.74095112535,
                 -0.59569930449,   0.94154406518,   0.04906767432,  -0.97003125319,
                  0.51410274419,   0.67155895484,  -0.90398929312,  -0.14673047445,
                  0.98917650996,  -0.42755509343,  -0.74095112535,   0.85772861000,
                  0.24298017990,  -0.99879545620,   0.33688985339,   0.80320753148,
                 -0.51410274419,   0.99879545620,  -0.42755509343,  -0.59569930449,
                  0.98917650996,  -0.33688985339,  -0.67155895484,   0.97003125319,
                 -0.24298017990,  -0.74095112535,   0.94154406518,  -0.14673047445,
                 -0.80320753148,   0.90398929312,  -0.04906767432,  -0.85772861000,
                 -0.42755509343,   0.97003125319,  -0.80320753148,   0.04906767432,
                  0.74095112535,  -0.98917650996,   0.51410274419,   0.33688985339,
                 -0.94154406518,   0.85772861000,  -0.14673047445,  -0.67155895484,
                  0.99879545620,  -0.59569930449,  -0.24298017990,   0.90398929312,
                 -0.33688985339,   0.85772861000,  -0.98917650996,   0.67155895484,
                 -0.04906767432,  -0.59569930449,   0.97003125319,  -0.90398929312,
                  0.42755509343,   0.24298017990,  -0.80320753148,   0.99879545620,
                 -0.74095112535,   0.14673047445,   0.51410274419,  -0.94154406518,
                 -0.24298017990,   0.67155895484,  -0.94154406518,   0.98917650996,
                 -0.80320753148,   0.42755509343,   0.04906767432,  -0.51410274419,
                  0.85772861000,  -0.99879545620,   0.90398929312,  -0.59569930449,
                  0.14673047445,   0.33688985339,  -0.74095112535,   0.97003125319,
                 -0.14673047445,   0.42755509343,  -0.67155895484,   0.85772861000,
                 -0.97003125319,   0.99879545620,  -0.94154406518,   0.80320753148,
                 -0.59569930449,   0.33688985339,  -0.04906767432,  -0.24298017990,
                  0.51410274419,  -0.74095112535,   0.90398929312,  -0.98917650996,
                 -0.04906767432,   0.14673047445,  -0.24298017990,   0.33688985339,
                 -0.42755509343,   0.51410274419,  -0.59569930449,   0.67155895484,
                 -0.74095112535,   0.80320753148,  -0.85772861000,   0.90398929312,
                 -0.94154406518,   0.97003125319,  -0.98917650996,   0.99879545620;


   // Synthesis window function - directly out of mpeg document
   // Note it's divided by 2 to fit within the bounds -1 to 1.
   .VAR/DM2      synthwin_coef[512] =
                  0.00000000000,  -0.00000762950,  -0.00000762950,  -0.00000762950,
                 -0.00000762950,  -0.00000762950,  -0.00000762950,  -0.00001525900,
                 -0.00001525900,  -0.00001525900,  -0.00001525900,  -0.00002288800,
                 -0.00002288800,  -0.00003051750,  -0.00003051750,  -0.00003814700,
                 -0.00003814700,  -0.00004577650,  -0.00005340600,  -0.00005340600,
                 -0.00006103500,  -0.00006866450,  -0.00007629400,  -0.00008392350,
                 -0.00009918200,  -0.00010681150,  -0.00012207050,  -0.00012969950,
                 -0.00014495850,  -0.00016021750,  -0.00018310550,  -0.00019836450,
                 -0.00022125250,  -0.00023651100,  -0.00026702900,  -0.00028991700,
                 -0.00031280500,  -0.00034332300,  -0.00037384050,  -0.00040435800,
                 -0.00044250500,  -0.00048065200,  -0.00051879900,  -0.00055694600,
                 -0.00060272200,  -0.00064849850,  -0.00069427500,  -0.00074005150,
                 -0.00079345700,  -0.00084686300,  -0.00089263900,  -0.00095367450,
                 -0.00100708000,  -0.00106048600,  -0.00112152100,  -0.00117492700,
                 -0.00122833250,  -0.00128936750,  -0.00134277350,  -0.00139617900,
                 -0.00144958500,  -0.00149536150,  -0.00154113750,  -0.00158691400,
                  0.00162506100,   0.00166320800,   0.00169372550,   0.00171661400,
                  0.00173187250,   0.00173950200,   0.00173950200,   0.00173187250,
                  0.00170898450,   0.00168609600,   0.00164032000,   0.00158691400,
                  0.00152587900,   0.00144195550,   0.00135040300,   0.00124359150,
                  0.00111389150,   0.00096893300,   0.00080871600,   0.00063323950,
                  0.00043487550,   0.00022125250,  -0.00001525900,  -0.00027465800,
                 -0.00054931650,  -0.00084686300,  -0.00116729750,  -0.00150299050,
                 -0.00186157250,  -0.00224304200,  -0.00264740000,  -0.00305938700,
                 -0.00350189200,  -0.00395965600,  -0.00443267800,  -0.00492095950,
                 -0.00542449950,  -0.00594329850,  -0.00646972650,  -0.00701141350,
                 -0.00756073000,  -0.00811767600,  -0.00867462150,  -0.00923156750,
                 -0.00978851300,  -0.01034545900,  -0.01089477550,  -0.01142883300,
                 -0.01195526100,  -0.01246643050,  -0.01295471200,  -0.01342010500,
                 -0.01386261000,  -0.01426696800,  -0.01464080800,  -0.01496887200,
                 -0.01526641850,  -0.01550292950,  -0.01569366450,  -0.01583099350,
                 -0.01590728750,  -0.01592254650,  -0.01586914050,  -0.01573944100,
                  0.01554107650,   0.01525878900,   0.01489257800,   0.01444244400,
                  0.01390075700,   0.01326751700,   0.01254272450,   0.01171112050,
                  0.01078796400,   0.00976562500,   0.00862884500,   0.00740051250,
                  0.00605773950,   0.00461578350,   0.00306701650,   0.00141143800,
                 -0.00034332300,  -0.00219726550,  -0.00415802000,  -0.00621032700,
                 -0.00835418700,  -0.01058959950,  -0.01290893550,  -0.01530456550,
                 -0.01777648950,  -0.02031707750,  -0.02291870100,  -0.02556610100,
                 -0.02826690650,  -0.03099823000,  -0.03376007100,  -0.03652954100,
                 -0.03931427000,  -0.04209136950,  -0.04485321050,  -0.04758453350,
                 -0.05027008050,  -0.05290985100,  -0.05547332750,  -0.05796051050,
                 -0.06034851050,  -0.06262969950,  -0.06478118900,  -0.06679534900,
                 -0.06864929200,  -0.07033538800,  -0.07183837900,  -0.07312774650,
                 -0.07421112050,  -0.07505798350,  -0.07565307600,  -0.07598114000,
                 -0.07603454600,  -0.07579803450,  -0.07524871850,  -0.07438659650,
                 -0.07318115250,  -0.07163238550,  -0.06972503650,  -0.06744384750,
                 -0.06478881850,  -0.06173706050,  -0.05828857400,  -0.05442810050,
                  0.05015563950,   0.04546356200,   0.04034423850,   0.03479766850,
                  0.02880859350,   0.02239227300,   0.01554107650,   0.00825500500,
                  0.00053405750,  -0.00761413550,  -0.01618957500,  -0.02517700200,
                 -0.03458404550,  -0.04438781750,  -0.05458068850,  -0.06515502950,
                 -0.07610321050,  -0.08739471450,  -0.09902954100,  -0.11099243150,
                 -0.12325286850,  -0.13579559350,  -0.14860534650,  -0.16165924050,
                 -0.17493438700,  -0.18840026850,  -0.20204162600,  -0.21582794200,
                 -0.22973632800,  -0.24373626700,  -0.25780487050,  -0.27191162100,
                 -0.28601837150,  -0.30010986350,  -0.31414794900,  -0.32810974100,
                 -0.34195709250,  -0.35565948500,  -0.36918640150,  -0.38251495350,
                 -0.39560699450,  -0.40843200700,  -0.42097473150,  -0.43318176250,
                 -0.44504547100,  -0.45652771000,  -0.46759796150,  -0.47824096700,
                 -0.48842620850,  -0.49812316900,  -0.50730896000,  -0.51596832300,
                 -0.52407836900,  -0.53160858150,  -0.53855896000,  -0.54489135750,
                 -0.55060577400,  -0.55568695050,  -0.56011199950,  -0.56387329100,
                 -0.56696319600,  -0.56938171400,  -0.57110595700,  -0.57214355450,
                  0.57249450700,   0.57214355450,   0.57110595700,   0.56938171400,
                  0.56696319600,   0.56387329100,   0.56011199950,   0.55568695050,
                  0.55060577400,   0.54489135750,   0.53855896000,   0.53160858150,
                  0.52407836900,   0.51596832300,   0.50730896000,   0.49812316900,
                  0.48842620850,   0.47824096700,   0.46759796150,   0.45652771000,
                  0.44504547100,   0.43318176250,   0.42097473150,   0.40843200700,
                  0.39560699450,   0.38251495350,   0.36918640150,   0.35565948500,
                  0.34195709250,   0.32810974100,   0.31414794900,   0.30010986350,
                  0.28601837150,   0.27191162100,   0.25780487050,   0.24373626700,
                  0.22973632800,   0.21582794200,   0.20204162600,   0.18840026850,
                  0.17493438700,   0.16165924050,   0.14860534650,   0.13579559350,
                  0.12325286850,   0.11099243150,   0.09902954100,   0.08739471450,
                  0.07610321050,   0.06515502950,   0.05458068850,   0.04438781750,
                  0.03458404550,   0.02517700200,   0.01618957500,   0.00761413550,
                 -0.00053405750,  -0.00825500500,  -0.01554107650,  -0.02239227300,
                 -0.02880859350,  -0.03479766850,  -0.04034423850,  -0.04546356200,
                  0.05015563950,   0.05442810050,   0.05828857400,   0.06173706050,
                  0.06478881850,   0.06744384750,   0.06972503650,   0.07163238550,
                  0.07318115250,   0.07438659650,   0.07524871850,   0.07579803450,
                  0.07603454600,   0.07598114000,   0.07565307600,   0.07505798350,
                  0.07421112050,   0.07312774650,   0.07183837900,   0.07033538800,
                  0.06864929200,   0.06679534900,   0.06478118900,   0.06262969950,
                  0.06034851050,   0.05796051050,   0.05547332750,   0.05290985100,
                  0.05027008050,   0.04758453350,   0.04485321050,   0.04209136950,
                  0.03931427000,   0.03652954100,   0.03376007100,   0.03099823000,
                  0.02826690650,   0.02556610100,   0.02291870100,   0.02031707750,
                  0.01777648950,   0.01530456550,   0.01290893550,   0.01058959950,
                  0.00835418700,   0.00621032700,   0.00415802000,   0.00219726550,
                  0.00034332300,  -0.00141143800,  -0.00306701650,  -0.00461578350,
                 -0.00605773950,  -0.00740051250,  -0.00862884500,  -0.00976562500,
                 -0.01078796400,  -0.01171112050,  -0.01254272450,  -0.01326751700,
                 -0.01390075700,  -0.01444244400,  -0.01489257800,  -0.01525878900,
                  0.01554107650,   0.01573944100,   0.01586914050,   0.01592254650,
                  0.01590728750,   0.01583099350,   0.01569366450,   0.01550292950,
                  0.01526641850,   0.01496887200,   0.01464080800,   0.01426696800,
                  0.01386261000,   0.01342010500,   0.01295471200,   0.01246643050,
                  0.01195526100,   0.01142883300,   0.01089477550,   0.01034545900,
                  0.00978851300,   0.00923156750,   0.00867462150,   0.00811767600,
                  0.00756073000,   0.00701141350,   0.00646972650,   0.00594329850,
                  0.00542449950,   0.00492095950,   0.00443267800,   0.00395965600,
                  0.00350189200,   0.00305938700,   0.00264740000,   0.00224304200,
                  0.00186157250,   0.00150299050,   0.00116729750,   0.00084686300,
                  0.00054931650,   0.00027465800,   0.00001525900,  -0.00022125250,
                 -0.00043487550,  -0.00063323950,  -0.00080871600,  -0.00096893300,
                 -0.00111389150,  -0.00124359150,  -0.00135040300,  -0.00144195550,
                 -0.00152587900,  -0.00158691400,  -0.00164032000,  -0.00168609600,
                 -0.00170898450,  -0.00173187250,  -0.00173950200,  -0.00173950200,
                 -0.00173187250,  -0.00171661400,  -0.00169372550,  -0.00166320800,
                  0.00162506100,   0.00158691400,   0.00154113750,   0.00149536150,
                  0.00144958500,   0.00139617900,   0.00134277350,   0.00128936750,
                  0.00122833250,   0.00117492700,   0.00112152100,   0.00106048600,
                  0.00100708000,   0.00095367450,   0.00089263900,   0.00084686300,
                  0.00079345700,   0.00074005150,   0.00069427500,   0.00064849850,
                  0.00060272200,   0.00055694600,   0.00051879900,   0.00048065200,
                  0.00044250500,   0.00040435800,   0.00037384050,   0.00034332300,
                  0.00031280500,   0.00028991700,   0.00026702900,   0.00023651100,
                  0.00022125250,   0.00019836450,   0.00018310550,   0.00016021750,
                  0.00014495850,   0.00012969950,   0.00012207050,   0.00010681150,
                  0.00009918200,   0.00008392350,   0.00007629400,   0.00006866450,
                  0.00006103500,   0.00005340600,   0.00005340600,   0.00004577650,
                  0.00003814700,   0.00003814700,   0.00003051750,   0.00003051750,
                  0.00002288800,   0.00002288800,   0.00001525900,   0.00001525900,
                  0.00001525900,   0.00001525900,   0.00000762950,   0.00000762950,
                  0.00000762950,   0.00000762950,   0.00000762950,   0.00000762950;

   // Variables and constants for detecting valid MP3 file
   .BLOCK mp3_detect;
      .VAR        valid_mp3_file_detected;
      .VAR        beginning_of_file;
      .VAR        lostsync;
      .VAR        consecutive_frames;
      .VAR        frame_detect_counter;
      .VAR        frame_type;
   .ENDBLOCK;

   .CONST         NUM_FRAME_DETECT_ATTEMPTS     200;

   .CONST         FRAME_MP3                     1;
   .CONST         FRAME_ID3V1                   2;
   .CONST         FRAME_ID3V2                   4;
   .CONST         FRAME_APEV2                   8;
.ENDMODULE;

#endif
